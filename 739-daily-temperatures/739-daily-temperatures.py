class Solution:
    def dailyTemperatures(self, temperatures: List[int]) -> List[int]:
        '''
        빗물 트래핑과 유사하다. 
        매일 온도 temperatures가 주어진다.
        몇일이 지나면 온도가 오르는지 return 하라
        '''
        # 책 풀이 - 1942ms
        ans = [0] * len(temperatures)   # ans 초기화
        stack = []                      # stack 
        
        # temperatures : [73,74,75,71,69,72,76,73]
        for i , cur in enumerate(temperatures):  # i : index  / cur : 온도값     ex) [0,73], [1,74], ...
            
            # 현재 온도가 스택 값보다 높다면 정답 처리 
            while stack and cur > temperatures[stack[-1]]: # 여기다가 if 절을 넣어버리네
                last = stack.pop()
                ans[last] = i - last
            stack.append(i)
        
        return ans

'''
i stack     cur          ans
1 [0]        74 [0, 0, 0, 0, 0, 0, 0, 0]
1 [ ]        74 [0, 0, 0, 0, 0, 0, 0, 0]
1 [ ]        74 [1, 0, 0, 0, 0, 0, 0, 0]
2 [1]        75 [1, 0, 0, 0, 0, 0, 0, 0]
2 [ ]        75 [1, 0, 0, 0, 0, 0, 0, 0]
2 [ ]        75 [1, 1, 0, 0, 0, 0, 0, 0]
5 [2, 3, 4]  72 [1, 1, 0, 0, 0, 0, 0, 0]
5 [2, 3]     72 [1, 1, 0, 0, 0, 0, 0, 0]
5 [2, 3]     72 [1, 1, 0, 0, 1, 0, 0, 0]
5 [2, 3]     72 [1, 1, 0, 0, 1, 0, 0, 0]
5 [2]        72 [1, 1, 0, 0, 1, 0, 0, 0]
5 [2]        72 [1, 1, 0, 2, 1, 0, 0, 0]
6 [2, 5]     76 [1, 1, 0, 2, 1, 0, 0, 0]
6 [2]        76 [1, 1, 0, 2, 1, 0, 0, 0]
6 [2]        76 [1, 1, 0, 2, 1, 1, 0, 0]
6 [2]        76 [1, 1, 0, 2, 1, 1, 0, 0]
6 []         76 [1, 1, 0, 2, 1, 1, 0, 0]
6 []         76 [1, 1, 4, 2, 1, 1, 0, 0]
'''    
            
        